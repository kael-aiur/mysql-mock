package net.bingosoft.mock.mysql.protocol.support;

import net.bingosoft.mock.mysql.protocol.datatype.pint.Int1;
import net.bingosoft.mock.mysql.protocol.datatype.pint.PInt;

import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.UnsupportedCharsetException;

/**
 * @author kael.
 */
public enum Charset {
    BIG5_CHINESE_CI(PInt.int1(1)),
    LATIN2_CZECH_CS(PInt.int1(2)),
    DEC8_SWEDISH_CI(PInt.int1(3)),
    CP850_GENERAL_CI(PInt.int1(4)),
    LATIN1_GERMAN1_CI(PInt.int1(5)),
    HP8_ENGLISH_CI(PInt.int1(6)),
    KOI8R_GENERAL_CI(PInt.int1(7)),
    LATIN1_SWEDISH_CI(PInt.int1(8)),
    LATIN2_GENERAL_CI(PInt.int1(9)),
    SWE7_SWEDISH_CI(PInt.int1(10)),
    ASCII_GENERAL_CI(PInt.int1(11)),
    UJIS_JAPANESE_CI(PInt.int1(12)),
    SJIS_JAPANESE_CI(PInt.int1(13)),
    CP1251_BULGARIAN_CI(PInt.int1(14)),
    LATIN1_DANISH_CI(PInt.int1(15)),
    HEBREW_GENERAL_CI(PInt.int1(16)),
    TIS620_THAI_CI(PInt.int1(18)),
    EUCKR_KOREAN_CI(PInt.int1(19)),
    LATIN7_ESTONIAN_CS(PInt.int1(20)),
    LATIN2_HUNGARIAN_CI(PInt.int1(21)),
    KOI8U_GENERAL_CI(PInt.int1(22)),
    CP1251_UKRAINIAN_CI(PInt.int1(23)),
    GB2312_CHINESE_CI(PInt.int1(24)),
    GREEK_GENERAL_CI(PInt.int1(25)),
    CP1250_GENERAL_CI(PInt.int1(26)),
    LATIN2_CROATIAN_CI(PInt.int1(27)),
    GBK_CHINESE_CI(PInt.int1(28)),
    CP1257_LITHUANIAN_CI(PInt.int1(29)),
    LATIN5_TURKISH_CI(PInt.int1(30)),
    LATIN1_GERMAN2_CI(PInt.int1(31)),
    ARMSCII8_GENERAL_CI(PInt.int1(32)),
    UTF8_GENERAL_CI(PInt.int1(33)),
    CP1250_CZECH_CS(PInt.int1(34)),
    UCS2_GENERAL_CI(PInt.int1(35)),
    CP866_GENERAL_CI(PInt.int1(36)),
    KEYBCS2_GENERAL_CI(PInt.int1(37)),
    MACCE_GENERAL_CI(PInt.int1(38)),
    MACROMAN_GENERAL_CI(PInt.int1(39)),
    CP852_GENERAL_CI(PInt.int1(40)),
    LATIN7_GENERAL_CI(PInt.int1(41)),
    LATIN7_GENERAL_CS(PInt.int1(42)),
    MACCE_BIN(PInt.int1(43)),
    CP1250_CROATIAN_CI(PInt.int1(44)),
    UTF8MB4_GENERAL_CI(PInt.int1(45)),
    UTF8MB4_BIN(PInt.int1(46)),
    LATIN1_BIN(PInt.int1(47)),
    LATIN1_GENERAL_CI(PInt.int1(48)),
    LATIN1_GENERAL_CS(PInt.int1(49)),
    CP1251_BIN(PInt.int1(50)),
    CP1251_GENERAL_CI(PInt.int1(51)),
    CP1251_GENERAL_CS(PInt.int1(52)),
    MACROMAN_BIN(PInt.int1(53)),
    UTF16_GENERAL_CI(PInt.int1(54)),
    UTF16_BIN(PInt.int1(55)),
    UTF16LE_GENERAL_CI(PInt.int1(56)),
    CP1256_GENERAL_CI(PInt.int1(57)),
    CP1257_BIN(PInt.int1(58)),
    CP1257_GENERAL_CI(PInt.int1(59)),
    UTF32_GENERAL_CI(PInt.int1(60)),
    UTF32_BIN(PInt.int1(61)),
    UTF16LE_BIN(PInt.int1(62)),
    BINARY(PInt.int1(63)),
    ARMSCII8_BIN(PInt.int1(64)),
    ASCII_BIN(PInt.int1(65)),
    CP1250_BIN(PInt.int1(66)),
    CP1256_BIN(PInt.int1(67)),
    CP866_BIN(PInt.int1(68)),
    DEC8_BIN(PInt.int1(69)),
    GREEK_BIN(PInt.int1(70)),
    HEBREW_BIN(PInt.int1(71)),
    HP8_BIN(PInt.int1(72)),
    KEYBCS2_BIN(PInt.int1(73)),
    KOI8R_BIN(PInt.int1(74)),
    KOI8U_BIN(PInt.int1(75)),
    LATIN2_BIN(PInt.int1(77)),
    LATIN5_BIN(PInt.int1(78)),
    LATIN7_BIN(PInt.int1(79)),
    CP850_BIN(PInt.int1(80)),
    CP852_BIN(PInt.int1(81)),
    SWE7_BIN(PInt.int1(82)),
    UTF8_BIN(PInt.int1(83)),
    BIG5_BIN(PInt.int1(84)),
    EUCKR_BIN(PInt.int1(85)),
    GB2312_BIN(PInt.int1(86)),
    GBK_BIN(PInt.int1(87)),
    SJIS_BIN(PInt.int1(88)),
    TIS620_BIN(PInt.int1(89)),
    UCS2_BIN(PInt.int1(90)),
    UJIS_BIN(PInt.int1(91)),
    GEOSTD8_GENERAL_CI(PInt.int1(92)),
    GEOSTD8_BIN(PInt.int1(93)),
    LATIN1_SPANISH_CI(PInt.int1(94)),
    CP932_JAPANESE_CI(PInt.int1(95)),
    CP932_BIN(PInt.int1(96)),
    EUCJPMS_JAPANESE_CI(PInt.int1(97)),
    EUCJPMS_BIN(PInt.int1(98)),
    CP1250_POLISH_CI(PInt.int1(99)),
    UTF16_UNICODE_CI(PInt.int1(101)),
    UTF16_ICELANDIC_CI(PInt.int1(102)),
    UTF16_LATVIAN_CI(PInt.int1(103)),
    UTF16_ROMANIAN_CI(PInt.int1(104)),
    UTF16_SLOVENIAN_CI(PInt.int1(105)),
    UTF16_POLISH_CI(PInt.int1(106)),
    UTF16_ESTONIAN_CI(PInt.int1(107)),
    UTF16_SPANISH_CI(PInt.int1(108)),
    UTF16_SWEDISH_CI(PInt.int1(109)),
    UTF16_TURKISH_CI(PInt.int1(110)),
    UTF16_CZECH_CI(PInt.int1(111)),
    UTF16_DANISH_CI(PInt.int1(112)),
    UTF16_LITHUANIAN_CI(PInt.int1(113)),
    UTF16_SLOVAK_CI(PInt.int1(114)),
    UTF16_SPANISH2_CI(PInt.int1(115)),
    UTF16_ROMAN_CI(PInt.int1(116)),
    UTF16_PERSIAN_CI(PInt.int1(117)),
    UTF16_ESPERANTO_CI(PInt.int1(118)),
    UTF16_HUNGARIAN_CI(PInt.int1(119)),
    UTF16_SINHALA_CI(PInt.int1(120)),
    UTF16_GERMAN2_CI(PInt.int1(121)),
    UTF16_CROATIAN_CI(PInt.int1(122)),
    UTF16_UNICODE_520_CI(PInt.int1(123)),
    UTF16_VIETNAMESE_CI(PInt.int1(124)),
    UCS2_UNICODE_CI(PInt.int1(128)),
    UCS2_ICELANDIC_CI(PInt.int1(129)),
    UCS2_LATVIAN_CI(PInt.int1(130)),
    UCS2_ROMANIAN_CI(PInt.int1(131)),
    UCS2_SLOVENIAN_CI(PInt.int1(132)),
    UCS2_POLISH_CI(PInt.int1(133)),
    UCS2_ESTONIAN_CI(PInt.int1(134)),
    UCS2_SPANISH_CI(PInt.int1(135)),
    UCS2_SWEDISH_CI(PInt.int1(136)),
    UCS2_TURKISH_CI(PInt.int1(137)),
    UCS2_CZECH_CI(PInt.int1(138)),
    UCS2_DANISH_CI(PInt.int1(139)),
    UCS2_LITHUANIAN_CI(PInt.int1(140)),
    UCS2_SLOVAK_CI(PInt.int1(141)),
    UCS2_SPANISH2_CI(PInt.int1(142)),
    UCS2_ROMAN_CI(PInt.int1(143)),
    UCS2_PERSIAN_CI(PInt.int1(144)),
    UCS2_ESPERANTO_CI(PInt.int1(145)),
    UCS2_HUNGARIAN_CI(PInt.int1(146)),
    UCS2_SINHALA_CI(PInt.int1(147)),
    UCS2_GERMAN2_CI(PInt.int1(148)),
    UCS2_CROATIAN_CI(PInt.int1(149)),
    UCS2_UNICODE_520_CI(PInt.int1(150)),
    UCS2_VIETNAMESE_CI(PInt.int1(151)),
    UCS2_GENERAL_MYSQL500_CI(PInt.int1(159)),
    UTF32_UNICODE_CI(PInt.int1(160)),
    UTF32_ICELANDIC_CI(PInt.int1(161)),
    UTF32_LATVIAN_CI(PInt.int1(162)),
    UTF32_ROMANIAN_CI(PInt.int1(163)),
    UTF32_SLOVENIAN_CI(PInt.int1(164)),
    UTF32_POLISH_CI(PInt.int1(165)),
    UTF32_ESTONIAN_CI(PInt.int1(166)),
    UTF32_SPANISH_CI(PInt.int1(167)),
    UTF32_SWEDISH_CI(PInt.int1(168)),
    UTF32_TURKISH_CI(PInt.int1(169)),
    UTF32_CZECH_CI(PInt.int1(170)),
    UTF32_DANISH_CI(PInt.int1(171)),
    UTF32_LITHUANIAN_CI(PInt.int1(172)),
    UTF32_SLOVAK_CI(PInt.int1(173)),
    UTF32_SPANISH2_CI(PInt.int1(174)),
    UTF32_ROMAN_CI(PInt.int1(175)),
    UTF32_PERSIAN_CI(PInt.int1(176)),
    UTF32_ESPERANTO_CI(PInt.int1(177)),
    UTF32_HUNGARIAN_CI(PInt.int1(178)),
    UTF32_SINHALA_CI(PInt.int1(179)),
    UTF32_GERMAN2_CI(PInt.int1(180)),
    UTF32_CROATIAN_CI(PInt.int1(181)),
    UTF32_UNICODE_520_CI(PInt.int1(182)),
    UTF32_VIETNAMESE_CI(PInt.int1(183)),
    UTF8_UNICODE_CI(PInt.int1(192)),
    UTF8_ICELANDIC_CI(PInt.int1(193)),
    UTF8_LATVIAN_CI(PInt.int1(194)),
    UTF8_ROMANIAN_CI(PInt.int1(195)),
    UTF8_SLOVENIAN_CI(PInt.int1(196)),
    UTF8_POLISH_CI(PInt.int1(197)),
    UTF8_ESTONIAN_CI(PInt.int1(198)),
    UTF8_SPANISH_CI(PInt.int1(199)),
    UTF8_SWEDISH_CI(PInt.int1(200)),
    UTF8_TURKISH_CI(PInt.int1(201)),
    UTF8_CZECH_CI(PInt.int1(202)),
    UTF8_DANISH_CI(PInt.int1(203)),
    UTF8_LITHUANIAN_CI(PInt.int1(204)),
    UTF8_SLOVAK_CI(PInt.int1(205)),
    UTF8_SPANISH2_CI(PInt.int1(206)),
    UTF8_ROMAN_CI(PInt.int1(207)),
    UTF8_PERSIAN_CI(PInt.int1(208)),
    UTF8_ESPERANTO_CI(PInt.int1(209)),
    UTF8_HUNGARIAN_CI(PInt.int1(210)),
    UTF8_SINHALA_CI(PInt.int1(211)),
    UTF8_GERMAN2_CI(PInt.int1(212)),
    UTF8_CROATIAN_CI(PInt.int1(213)),
    UTF8_UNICODE_520_CI(PInt.int1(214)),
    UTF8_VIETNAMESE_CI(PInt.int1(215)),
    UTF8_GENERAL_MYSQL500_CI(PInt.int1(223)),
    UTF8MB4_UNICODE_CI(PInt.int1(224)),
    UTF8MB4_ICELANDIC_CI(PInt.int1(225)),
    UTF8MB4_LATVIAN_CI(PInt.int1(226)),
    UTF8MB4_ROMANIAN_CI(PInt.int1(227)),
    UTF8MB4_SLOVENIAN_CI(PInt.int1(228)),
    UTF8MB4_POLISH_CI(PInt.int1(229)),
    UTF8MB4_ESTONIAN_CI(PInt.int1(230)),
    UTF8MB4_SPANISH_CI(PInt.int1(231)),
    UTF8MB4_SWEDISH_CI(PInt.int1(232)),
    UTF8MB4_TURKISH_CI(PInt.int1(233)),
    UTF8MB4_CZECH_CI(PInt.int1(234)),
    UTF8MB4_DANISH_CI(PInt.int1(235)),
    UTF8MB4_LITHUANIAN_CI(PInt.int1(236)),
    UTF8MB4_SLOVAK_CI(PInt.int1(237)),
    UTF8MB4_SPANISH2_CI(PInt.int1(238)),
    UTF8MB4_ROMAN_CI(PInt.int1(239)),
    UTF8MB4_PERSIAN_CI(PInt.int1(240)),
    UTF8MB4_ESPERANTO_CI(PInt.int1(241)),
    UTF8MB4_HUNGARIAN_CI(PInt.int1(242)),
    UTF8MB4_SINHALA_CI(PInt.int1(243)),
    UTF8MB4_GERMAN2_CI(PInt.int1(244)),
    UTF8MB4_CROATIAN_CI(PInt.int1(245)),
    UTF8MB4_UNICODE_520_CI(PInt.int1(246)),
    UTF8MB4_VIETNAMESE_CI(PInt.int1(247)),
    GB18030_CHINESE_CI(PInt.int1(248)),
    GB18030_BIN(PInt.int1(249)),
    GB18030_UNICODE_520_CI(PInt.int1(250));

    private Int1 value;

    Charset(Int1 value) {
        this.value = value;
    }

    public byte[] getValue() {
        return value.toByteArray();
    }
    
    public static Charset read(InputStream is) throws IOException{
        Int1 v = PInt.readInt1(is);
        for(Charset c : values()){
            if(c.value.valueEquals(v)){
                return c;
            }
        }
        throw new UnsupportedCharsetException("charset id "+v.getValue()+" not found!");
    }
}
